# Generated by Django 4.1.7 on 2023-05-20 08:07

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Connections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabel_type', models.CharField(max_length=50, verbose_name='Тип кабеля')),
                ('type', models.CharField(max_length=50, verbose_name='Тип соединения')),
            ],
            options={
                'verbose_name': 'Соединение',
                'verbose_name_plural': 'Соединения',
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=50, verbose_name='Производитель')),
                ('model', models.CharField(max_length=50, verbose_name='Модель')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('manufacturer_country', models.CharField(blank=True, max_length=50, verbose_name='Страна производства')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Вес')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Ширина')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Длинна')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Длинна')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.models.user_directory_path, verbose_name='Изображение')),
            ],
        ),
        migrations.CreateModel(
            name='Element_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(None, 'Выберите тип устройства'), ('r', 'Маршрутизатор'), ('s', 'Коммутатор'), ('h', 'Концентратор'), ('e', 'Конечное устройство'), ('c', 'Соединение')], max_length=50, verbose_name='Катеогрия устройства')),
            ],
            options={
                'verbose_name': 'Категория устройства',
                'verbose_name_plural': 'Категории устройств',
            },
        ),
        migrations.CreateModel(
            name='Element_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connections_list', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.connections', verbose_name='Список соединений')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Список элементов',
                'verbose_name_plural': 'Списки элементов',
            },
        ),
        migrations.CreateModel(
            name='End_devices',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.element')),
                ('device_type', models.CharField(max_length=50, verbose_name='Тип устройства')),
                ('protocol_types', models.CharField(max_length=255, verbose_name='Типы протоклов')),
                ('number_of_ports', models.IntegerField(blank=True, verbose_name='Количество портов')),
                ('approximate_network_load', models.IntegerField(blank=True, verbose_name='Приблизительная сетевая нагрузка')),
            ],
            options={
                'verbose_name': 'Конечный девайс',
                'verbose_name_plural': 'Конечные девайсы',
            },
            bases=('core.element',),
        ),
        migrations.CreateModel(
            name='Hub',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.element')),
                ('number_of_ports', models.IntegerField(blank=True, verbose_name='Количествопортов')),
                ('baud_rate', models.IntegerField(blank=True, verbose_name='Скорость передачи данных')),
                ('coaxial_or_optical_ports', models.BooleanField(default=False, verbose_name='Наличие коаксильных или оптических портов')),
            ],
            options={
                'verbose_name': 'Концентратор',
                'verbose_name_plural': 'Концентраторы',
            },
            bases=('core.element',),
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.element')),
                ('used_network_protocols', models.CharField(blank=True, max_length=255, verbose_name='Сетевые протоколы')),
                ('available_interfaces', models.CharField(blank=True, max_length=255, verbose_name='Поддерживаемые интерфейсы')),
                ('overall_performance', models.CharField(blank=True, max_length=255, verbose_name='Общая производительность')),
            ],
            options={
                'verbose_name': 'Маршрутизатор',
                'verbose_name_plural': 'Маршрутизаторы',
            },
            bases=('core.element',),
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.element')),
                ('number_of_ports', models.IntegerField(blank=True, verbose_name='Количество портов')),
                ('filtering_speed', models.IntegerField(blank=True, verbose_name='Скорость фильтрации')),
                ('routing_speed', models.IntegerField(blank=True, verbose_name='Скорость маршрутизации')),
                ('transmission_ability', models.IntegerField(blank=True, verbose_name='Пропускная способность')),
                ('frame_delay', models.IntegerField(blank=True, verbose_name='Задержка передачи кадров')),
                ('the_ability_to_stack', models.IntegerField(blank=True, verbose_name='Возможность стекирования')),
                ('work_level', models.IntegerField(blank=True, verbose_name='Уровень работы')),
            ],
            options={
                'verbose_name': 'Коммутатор',
                'verbose_name_plural': 'Коммутаторы',
            },
            bases=('core.element',),
        ),
        migrations.CreateModel(
            name='Network_configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(verbose_name='Дата создания')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Стоимость')),
                ('network_elements', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.element_list', verbose_name='Список элементов')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Готовая сеть',
                'verbose_name_plural': 'Готовые сети',
            },
        ),
        migrations.AddField(
            model_name='element',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.element_category'),
        ),
        migrations.AddField(
            model_name='connections',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.element_category'),
        ),
        migrations.AddField(
            model_name='element_list',
            name='end_devices_list',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.end_devices', verbose_name='Список конечных устройств'),
        ),
        migrations.AddField(
            model_name='element_list',
            name='hub_list',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.hub', verbose_name='Список хабов'),
        ),
        migrations.AddField(
            model_name='element_list',
            name='routers_list',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.router', verbose_name='Список маршрутизаторов'),
        ),
        migrations.AddField(
            model_name='element_list',
            name='switche_list',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='core.switch', verbose_name='Список коммутаторов'),
        ),
    ]
